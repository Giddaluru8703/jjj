<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="29" passed="27">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="489" started-at="2023-05-08T10:01:14Z" finished-at="2023-05-08T10:01:15Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="489" started-at="2023-05-08T10:01:14Z" finished-at="2023-05-08T10:01:15Z">
      <class name="annotations.Annot">
        <test-method status="PASS" signature="bclass()[pri:0, instance:annotations.Annot@39aeed2f]" name="bclass" is-config="true" duration-ms="1" started-at="2023-05-08T10:01:15Z" finished-at="2023-05-08T10:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bclass -->
        <test-method status="PASS" signature="testCase1()[pri:0, instance:annotations.Annot@39aeed2f]" name="testCase1" duration-ms="2" started-at="2023-05-08T10:01:15Z" finished-at="2023-05-08T10:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method status="PASS" signature="bmethod2()[pri:0, instance:annotations.Annot@39aeed2f]" name="bmethod2" is-config="true" duration-ms="0" started-at="2023-05-08T10:01:15Z" finished-at="2023-05-08T10:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmethod2 -->
        <test-method status="PASS" signature="bmethod1()[pri:0, instance:annotations.Annot@39aeed2f]" name="bmethod1" is-config="true" duration-ms="0" started-at="2023-05-08T10:01:15Z" finished-at="2023-05-08T10:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmethod1 -->
        <test-method status="PASS" signature="amethod()[pri:0, instance:annotations.Annot@39aeed2f]" name="amethod" is-config="true" duration-ms="1" started-at="2023-05-08T10:01:15Z" finished-at="2023-05-08T10:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amethod -->
        <test-method status="PASS" signature="bmethod1()[pri:0, instance:annotations.Annot@39aeed2f]" name="bmethod1" is-config="true" duration-ms="1" started-at="2023-05-08T10:01:15Z" finished-at="2023-05-08T10:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmethod1 -->
        <test-method status="PASS" signature="bmethod2()[pri:0, instance:annotations.Annot@39aeed2f]" name="bmethod2" is-config="true" duration-ms="0" started-at="2023-05-08T10:01:15Z" finished-at="2023-05-08T10:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmethod2 -->
        <test-method status="PASS" signature="testCase3()[pri:0, instance:annotations.Annot@39aeed2f]" name="testCase3" duration-ms="1" started-at="2023-05-08T10:01:15Z" finished-at="2023-05-08T10:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase3 -->
        <test-method status="PASS" signature="amethod()[pri:0, instance:annotations.Annot@39aeed2f]" name="amethod" is-config="true" duration-ms="0" started-at="2023-05-08T10:01:15Z" finished-at="2023-05-08T10:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amethod -->
        <test-method status="PASS" signature="bmethod2()[pri:0, instance:annotations.Annot@39aeed2f]" name="bmethod2" is-config="true" duration-ms="0" started-at="2023-05-08T10:01:15Z" finished-at="2023-05-08T10:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmethod2 -->
        <test-method status="PASS" signature="testCase2()[pri:0, instance:annotations.Annot@39aeed2f]" name="testCase2" duration-ms="0" started-at="2023-05-08T10:01:15Z" finished-at="2023-05-08T10:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase2 -->
        <test-method status="PASS" signature="bmethod1()[pri:0, instance:annotations.Annot@39aeed2f]" name="bmethod1" is-config="true" duration-ms="0" started-at="2023-05-08T10:01:15Z" finished-at="2023-05-08T10:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bmethod1 -->
        <test-method status="PASS" signature="aclass()[pri:0, instance:annotations.Annot@39aeed2f]" name="aclass" is-config="true" duration-ms="0" started-at="2023-05-08T10:01:15Z" finished-at="2023-05-08T10:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aclass -->
        <test-method status="PASS" signature="amethod()[pri:0, instance:annotations.Annot@39aeed2f]" name="amethod" is-config="true" duration-ms="0" started-at="2023-05-08T10:01:15Z" finished-at="2023-05-08T10:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amethod -->
      </class> <!-- annotations.Annot -->
      <class name="annotations.HardAssertExample">
        <test-method status="PASS" signature="testCase1()[pri:0, instance:annotations.HardAssertExample@4678c730]" name="testCase1" duration-ms="2" started-at="2023-05-08T10:01:15Z" finished-at="2023-05-08T10:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
      </class> <!-- annotations.HardAssertExample -->
      <class name="annotations.WorkWithExcel">
        <test-method status="PASS" signature="workWithxl()[pri:0, instance:annotations.WorkWithExcel@724af044]" name="workWithxl" duration-ms="363" started-at="2023-05-08T10:01:14Z" finished-at="2023-05-08T10:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- workWithxl -->
      </class> <!-- annotations.WorkWithExcel -->
      <class name="annotations.OneMoreMethod">
        <test-method status="FAIL" signature="testCase1()[pri:0, instance:annotations.OneMoreMethod@c038203]" name="testCase1" duration-ms="9" started-at="2023-05-08T10:01:15Z" finished-at="2023-05-08T10:01:15Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Strings are mis-matching]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Strings are mis-matching
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at annotations.OneMoreMethod.testCase1(OneMoreMethod.java:19)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
      </class> <!-- annotations.OneMoreMethod -->
      <class name="annotations.SoftAssertExample">
        <test-method status="FAIL" signature="testCase1()[pri:0, instance:annotations.SoftAssertExample@cc285f4]" name="testCase1" duration-ms="2" started-at="2023-05-08T10:01:15Z" finished-at="2023-05-08T10:01:15Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
comparing number of links expected [10] but found [12],
comparing two strings expected [Bengalooru] but found [Bangalore]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
comparing number of links expected [10] but found [12],
comparing two strings expected [Bengalooru] but found [Bangalore]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at annotations.SoftAssertExample.testCase1(SoftAssertExample.java:20)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
      </class> <!-- annotations.SoftAssertExample -->
      <class name="annotations.Order">
        <test-method status="PASS" signature="Deletemail()[pri:-3, instance:annotations.Order@6767c1fc]" name="Deletemail" duration-ms="15" started-at="2023-05-08T10:01:14Z" finished-at="2023-05-08T10:01:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Deletemail -->
        <test-method status="PASS" signature="login()[pri:1, instance:annotations.Order@6767c1fc]" name="login" duration-ms="0" started-at="2023-05-08T10:01:15Z" finished-at="2023-05-08T10:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method status="PASS" signature="composemail()[pri:2, instance:annotations.Order@6767c1fc]" name="composemail" duration-ms="0" started-at="2023-05-08T10:01:15Z" finished-at="2023-05-08T10:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- composemail -->
      </class> <!-- annotations.Order -->
      <class name="annotations.ParamWithExcel">
        <test-method status="PASS" signature="testcase1(java.lang.String, java.lang.String)[pri:0, instance:annotations.ParamWithExcel@55f3ddb1]" name="testcase1" duration-ms="2" started-at="2023-05-08T10:01:15Z" data-provider="getdata" finished-at="2023-05-08T10:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method status="PASS" signature="testcase1(java.lang.String, java.lang.String)[pri:0, instance:annotations.ParamWithExcel@55f3ddb1]" name="testcase1" duration-ms="1" started-at="2023-05-08T10:01:15Z" data-provider="getdata" finished-at="2023-05-08T10:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method status="PASS" signature="testcase1(java.lang.String, java.lang.String)[pri:0, instance:annotations.ParamWithExcel@55f3ddb1]" name="testcase1" duration-ms="1" started-at="2023-05-08T10:01:15Z" data-provider="getdata" finished-at="2023-05-08T10:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method status="PASS" signature="testcase1(java.lang.String, java.lang.String)[pri:0, instance:annotations.ParamWithExcel@55f3ddb1]" name="testcase1" duration-ms="1" started-at="2023-05-08T10:01:15Z" data-provider="getdata" finished-at="2023-05-08T10:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method status="PASS" signature="testcase1(java.lang.String, java.lang.String)[pri:0, instance:annotations.ParamWithExcel@55f3ddb1]" name="testcase1" duration-ms="1" started-at="2023-05-08T10:01:15Z" data-provider="getdata" finished-at="2023-05-08T10:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method status="PASS" signature="testcase1(java.lang.String, java.lang.String)[pri:0, instance:annotations.ParamWithExcel@55f3ddb1]" name="testcase1" duration-ms="0" started-at="2023-05-08T10:01:15Z" data-provider="getdata" finished-at="2023-05-08T10:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method status="PASS" signature="testcase1(java.lang.String, java.lang.String)[pri:0, instance:annotations.ParamWithExcel@55f3ddb1]" name="testcase1" duration-ms="0" started-at="2023-05-08T10:01:15Z" data-provider="getdata" finished-at="2023-05-08T10:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method status="PASS" signature="testcase1(java.lang.String, java.lang.String)[pri:0, instance:annotations.ParamWithExcel@55f3ddb1]" name="testcase1" duration-ms="0" started-at="2023-05-08T10:01:15Z" data-provider="getdata" finished-at="2023-05-08T10:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method status="PASS" signature="testcase1(java.lang.String, java.lang.String)[pri:0, instance:annotations.ParamWithExcel@55f3ddb1]" name="testcase1" duration-ms="0" started-at="2023-05-08T10:01:15Z" data-provider="getdata" finished-at="2023-05-08T10:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method status="PASS" signature="testcase1(java.lang.String, java.lang.String)[pri:0, instance:annotations.ParamWithExcel@55f3ddb1]" name="testcase1" duration-ms="0" started-at="2023-05-08T10:01:15Z" data-provider="getdata" finished-at="2023-05-08T10:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method status="PASS" signature="testcase1(java.lang.String, java.lang.String)[pri:0, instance:annotations.ParamWithExcel@55f3ddb1]" name="testcase1" duration-ms="0" started-at="2023-05-08T10:01:15Z" data-provider="getdata" finished-at="2023-05-08T10:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password11]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method status="PASS" signature="testcase1(java.lang.String, java.lang.String)[pri:0, instance:annotations.ParamWithExcel@55f3ddb1]" name="testcase1" duration-ms="0" started-at="2023-05-08T10:01:15Z" data-provider="getdata" finished-at="2023-05-08T10:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name12]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method status="PASS" signature="testcase1(java.lang.String, java.lang.String)[pri:0, instance:annotations.ParamWithExcel@55f3ddb1]" name="testcase1" duration-ms="0" started-at="2023-05-08T10:01:15Z" data-provider="getdata" finished-at="2023-05-08T10:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password13]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method status="PASS" signature="testcase1(java.lang.String, java.lang.String)[pri:0, instance:annotations.ParamWithExcel@55f3ddb1]" name="testcase1" duration-ms="0" started-at="2023-05-08T10:01:15Z" data-provider="getdata" finished-at="2023-05-08T10:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name14]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method status="PASS" signature="testcase1(java.lang.String, java.lang.String)[pri:0, instance:annotations.ParamWithExcel@55f3ddb1]" name="testcase1" duration-ms="1" started-at="2023-05-08T10:01:15Z" data-provider="getdata" finished-at="2023-05-08T10:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name16]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password16]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method status="PASS" signature="testcase1(java.lang.String, java.lang.String)[pri:0, instance:annotations.ParamWithExcel@55f3ddb1]" name="testcase1" duration-ms="0" started-at="2023-05-08T10:01:15Z" data-provider="getdata" finished-at="2023-05-08T10:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name15]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Password15]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
      </class> <!-- annotations.ParamWithExcel -->
      <class name="annotations.ParamWithArray">
        <test-method status="PASS" signature="testCase1(java.lang.String, java.lang.String)[pri:0, instance:annotations.ParamWithArray@29ee9faa]" name="testCase1" duration-ms="1" started-at="2023-05-08T10:01:15Z" data-provider="getdata1" finished-at="2023-05-08T10:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method status="PASS" signature="testCase1(java.lang.String, java.lang.String)[pri:0, instance:annotations.ParamWithArray@29ee9faa]" name="testCase1" duration-ms="1" started-at="2023-05-08T10:01:15Z" data-provider="getdata1" finished-at="2023-05-08T10:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method status="PASS" signature="testCase1(java.lang.String, java.lang.String)[pri:0, instance:annotations.ParamWithArray@29ee9faa]" name="testCase1" duration-ms="2" started-at="2023-05-08T10:01:15Z" data-provider="getdata1" finished-at="2023-05-08T10:01:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
      </class> <!-- annotations.ParamWithArray -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
